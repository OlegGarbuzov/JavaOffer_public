services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./conf/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - javaoffer

  javaoffer:
    container_name: javaoffer
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - 8083:8080
      - 5005:5005
    environment:
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ACCESS_TOKEN_EXPIRATION=${JWT_ACCESS_TOKEN_EXPIRATION}
      - JWT_REFRESH_TOKEN_EXPIRATION=${JWT_REFRESH_TOKEN_EXPIRATION}
      - ANTI_CHEAT_TOKEN_SECRET=${ANTI_CHEAT_TOKEN_SECRET}
      - SERVER_PORT=${SERVER_PORT}
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - ./target/classes:/app/target/classes
      - ./target/dependency:/app/target/dependency
      - ./logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock:rw
    command: [ "java", "-cp", "/app/target/classes:/app/target/dependency/*", "com.example.javaoffer.JavaOfferApplication" ]

  postgres:
    container_name: postgres_jo
    image: postgres
    environment:
      - POSTGRES_DB=JavaOfferDb
      - POSTGRES_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - POSTGRES_USER=${SPRING_DATASOURCE_USERNAME}
    ports:
      - 5433:5432
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${SPRING_DATASOURCE_USERNAME} -d JavaOfferDb && psql -U ${SPRING_DATASOURCE_USERNAME} -d JavaOfferDb -c 'SELECT 1' -v ON_ERROR_STOP=1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped
