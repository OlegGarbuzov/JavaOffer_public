package com.example.javaoffer.exam.enums;

/**
 * Перечисление, представляющее темы заданий в системе.
 * <p>
 * Определяет тематические категории, к которым могут относиться задания.
 * Используется для классификации вопросов, поиска и фильтрации по тематике,
 * а также формирования тематических экзаменов.
 * 
 *
 * @author Garbuzov Oleg
 */
public enum TaskTopic {
    /**
     * Базовые концепции Java Core.
     * <p>
     * Включает вопросы по синтаксису и основным возможностям языка: примитивным типам,
     * операторам, управляющим конструкциям, работе с массивами, строками,
     * коллекциям, исключениям, вводу-выводу, сериализации и т.д.
     * 
     */
    CORE,
    
    /**
     * Фреймворк Spring и его модули.
     * <p>
     * Включает вопросы по Spring Core, Spring Boot, Spring MVC, Spring Data,
     * Spring Security, аспектно-ориентированному программированию, инверсии
     * управления, внедрению зависимостей и т.д.
     * 
     */
    SPRING,
    
    /**
     * ORM-фреймворк Hibernate и работа с ним.
     * <p>
     * Включает вопросы по маппингу объектно-реляционных моделей, работе с сессиями,
     * транзакциями, кэшированием, критериям поиска, HQL, обработке коллекций
     * и ассоциаций, ленивой загрузке и т.д.
     * 
     */
    HIBERNATE,
    
    /**
     * Структурированный язык запросов SQL.
     * <p>
     * Включает вопросы по стандартным операторам SQL (SELECT, INSERT, UPDATE, DELETE),
     * агрегатным функциям, группировке, соединениям таблиц, подзапросам, индексам,
     * триггерам, хранимым процедурам и т.д.
     * 
     */
    SQL,
    
    /**
     * Шаблоны проектирования и архитектурные решения.
     * <p>
     * Включает вопросы по порождающим, структурным и поведенческим шаблонам проектирования,
     * архитектурным стилям и паттернам, таким как MVC, MVVM, микросервисы,
     * события-команды-запросы (CQRS) и т.д.
     * 
     */
    DESIGN_PATTERNS,
    
    /**
     * Алгоритмы и их реализация.
     * <p>
     * Включает вопросы по алгоритмам сортировки, поиска, обхода графов,
     * динамическому программированию, жадным алгоритмам, рекурсии,
     * анализу сложности и т.д.
     * 
     */
    ALGORITHMS,
    
    /**
     * Структуры данных и их применение.
     * <p>
     * Включает вопросы по различным структурам данных: спискам, стекам, очередям,
     * деревьям, графам, хеш-таблицам, множествам и их реализациям в Java.
     * 
     */
    DATA_STRUCTURES,
    
    /**
     * Многопоточное программирование.
     * <p>
     * Включает вопросы по работе с потоками, синхронизации, блокировкам,
     * атомарным операциям, механизмам параллелизма Java (Executor, Future, CompletableFuture),
     * пулам потоков и т.д.
     * 
     */
    MULTITHREADING,
    
    /**
     * Методологии и инструменты тестирования.
     * <p>
     * Включает вопросы по модульному, интеграционному и функциональному тестированию,
     * TDD, BDD, мок-объектам, фреймворкам тестирования (JUnit, TestNG, Mockito) и т.д.
     * 
     */
    TESTING,
    
    /**
     * Другие темы, не вошедшие в основные категории.
     * <p>
     * Включает вопросы по сетевому программированию, веб-сервисам, контейнеризации,
     * облачным технологиям, инструментам сборки, системам контроля версий и т.д.
     * 
     */
    OTHER
} 