package com.example.javaoffer.exam.enums;

import lombok.Getter;

/**
 * Перечисление, представляющее уровни сложности экзаменов в системе.
 * <p>
 * Содержит более общую классификацию сложности, чем {@link TaskDifficulty},
 * определяет стартовую сложность вопросов при начале экзамена.
 * Каждый уровень содержит числовое значение, соответствующее определенному
 * уровню сложности вопроса из {@link TaskDifficulty}.
 * 
 *
 * @author Garbuzov Oleg
 * @see TaskDifficulty
 */
@Getter
public enum ExamDifficulty {
    /**
     * Легкая сложность экзамена.
     * <p>
     * Начинает экзамен с вопросов легкого уровня (Easy1).
     * Подходит для начинающих и пользователей, желающих практиковаться на
     * базовых вопросах. Соответствует числовому уровню 1.
     * 
     */
    EASY(1),
    
    /**
     * Средняя сложность экзамена.
     * <p>
     * Начинает экзамен с вопросов среднего уровня (MEDIUM1).
     * Подходит для подготовленных пользователей со средним уровнем знаний.
     * Соответствует числовому уровню 4.
     * 
     */
    MEDIUM(4),
    
    /**
     * Высокая сложность экзамена.
     * <p>
     * Начинает экзамен с вопросов сложного уровня (HARD1).
     * Подходит для опытных разработчиков с глубокими знаниями.
     * Соответствует числовому уровню 7.
     * 
     */
    HARD(7);

    /**
     * Числовое значение стартовой сложности вопросов.
     * Соответствует уровню в {@link TaskDifficulty}.
     */
    private final int level;

    /**
     * Конструктор с указанием числового уровня сложности.
     *
     * @param level числовой уровень сложности вопросов, с которых начнется экзамен
     */
    ExamDifficulty(int level) {
        this.level = level;
    }
}
