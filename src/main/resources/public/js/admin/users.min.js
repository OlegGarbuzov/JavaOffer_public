function getFilters(){return{id:document.getElementById("filterId").value.trim(),email:document.getElementById("filterEmail").value.trim(),username:document.getElementById("filterUsername").value.trim(),role:document.getElementById("filterRole").value,accountNonLocked:document.getElementById("filterLocked").value}}function loadUsers(e=0){const t=getFilters()
pageSize=parseInt(document.getElementById("pageSize").value)
let n=`/admin/api/users?page=${e}&size=${pageSize}`
t.id&&(n+=`&id=${t.id}`),t.email&&(n+=`&email=${encodeURIComponent(t.email)}`),t.username&&(n+=`&username=${encodeURIComponent(t.username)}`),t.role&&(n+=`&role=${t.role}`),t.accountNonLocked&&(n+=`&accountNonLocked=${t.accountNonLocked}`),fetch(n).then((e=>e.json())).then((e=>{renderUsers(e.content),totalPages=e.totalPages,currentPage=e.number,renderPagination()}))}function renderUsers(e){const t=document.getElementById("usersTableBody")
t.innerHTML="",e.forEach((e=>{const n=document.createElement("tr")
n.innerHTML=`\n      <td>${e.id}</td>\n      <td>${e.email}</td>\n      <td>${e.username}</td>\n      <td>${"ROLE_ADMIN"===e.role?"Администратор":"Пользователь"}</td>\n      <td><button class="btn btn-link p-0 user-history-btn" data-user-id="${e.id}">${e.userScoreHistoriesCount}</button></td>\n      <td>${e.accountNonLocked?"Активен":"Заблокирован"}</td>\n      <td>\n        <button class="btn btn-sm btn-primary edit-user-btn" data-user-id="${e.id}">Редактировать</button>\n      </td>\n    `,t.appendChild(n)}))}function renderPagination(){const e=document.getElementById("pagination")
if(e.innerHTML="",totalPages<=1)e.style.display="none"
else{e.style.display="",e.innerHTML+=`<li class="page-item${0===currentPage?" disabled":""}"><a class="page-link" href="#" data-page="${currentPage-1}">&laquo;</a></li>`
for(let t=0;t<totalPages;t++)e.innerHTML+=`<li class="page-item${t===currentPage?" active":""}"><a class="page-link" href="#" data-page="${t}">${t+1}</a></li>`
e.innerHTML+=`<li class="page-item${currentPage===totalPages-1?" disabled":""}"><a class="page-link" href="#" data-page="${currentPage+1}">&raquo;</a></li>`,e.querySelectorAll("a.page-link").forEach((e=>{e.addEventListener("click",(function(e){e.preventDefault()
const t=parseInt(this.getAttribute("data-page"))
!isNaN(t)&&t>=0&&t<totalPages&&loadUsers(t)}))}))}}function openEditUserModal(e){fetch(`/admin/api/users/${e}`).then((e=>e.json())).then((e=>{document.getElementById("editUserId").value=e.id,document.getElementById("editUserEmail").value=e.email,document.getElementById("editUserUsername").value=e.username,document.getElementById("editUserRole").value=e.role,document.getElementById("editUserLocked").checked=!e.accountNonLocked,new bootstrap.Modal(document.getElementById("editUserModal")).show()}))}function openUserScoreHistoryModal(e){let t=10,n=""
const o=new bootstrap.Modal(document.getElementById("userScoreHistoryModal")),a=document.getElementById("userScoreHistoriesContent");(function o(s){fetch(`/admin/api/users/${e}/score-histories?page=${s}&size=${t}&examId=${encodeURIComponent(n)}`).then((e=>e.json())).then((e=>{!function(e){const s=e.content
let d=`\n      <div class="mb-2 d-flex gap-2 align-items-center">\n        <input type="text" class="form-control form-control-sm" id="historyExamIdInput" placeholder="Поиск по examId" value="${n}">\n        <select class="form-select form-select-sm" id="historyPageSize" style="width:auto;">\n          <option value="10" ${10==t?"selected":""}>10</option>\n          <option value="25" ${25==t?"selected":""}>25</option>\n          <option value="50" ${50==t?"selected":""}>50</option>\n        </select>\n      </div>\n      <div class="table-responsive">\n        <table class="table table-bordered table-sm">\n          <thead><tr>\n            <th>ID</th><th>Дата</th><th>Экзамен</th><th>Правильных</th><th>Ошибок</th><th>Очки</th><th>bonusByTime</th><th>Время (сек)</th><th>Среднее время ответа (сек)</th><th></th>\n          </tr></thead>\n          <tbody>\n            ${s.map((e=>{const t=(e.successAnswersCountAbsolute||0)+(e.failAnswersCountAbsolute||0),n=t>0?(e.timeTakenToComplete/t).toFixed(2):"-"
return`<tr>\n                <td>${e.id}</td>\n                <td>${e.createAt?e.createAt.replace("T"," ").substring(0,19):""}</td>\n                <td>${e.examID||""}</td>\n                <td>${e.successAnswersCountAbsolute}</td>\n                <td>${e.failAnswersCountAbsolute}</td>\n                <td>${e.score}</td>\n                <td>${void 0!==e.bonusByTime?e.bonusByTime:""}</td>\n                <td>${e.timeTakenToComplete}</td>\n                <td>${n}</td>\n                <td><button class="btn btn-sm btn-danger delete-history-btn" data-history-id="${e.id}">Удалить</button></td>\n              </tr>`})).join("")}\n          </tbody>\n        </table>\n      </div>\n      <div class="d-flex justify-content-between align-items-center mt-2">\n        <div>Всего: ${e.totalElements}</div>\n        <nav><ul class="pagination pagination-sm mb-0" id="historyPagination"></ul></nav>\n      </div>\n    `
a.innerHTML=d
const i=document.getElementById("historyPagination")
if(i.innerHTML="",e.totalPages>1){i.innerHTML+=`<li class="page-item${0===e.number?" disabled":""}"><a class="page-link" href="#" data-page="${e.number-1}">&laquo;</a></li>`
for(let t=0;t<e.totalPages;t++)i.innerHTML+=`<li class="page-item${t===e.number?" active":""}"><a class="page-link" href="#" data-page="${t}">${t+1}</a></li>`
i.innerHTML+=`<li class="page-item${e.number===e.totalPages-1?" disabled":""}"><a class="page-link" href="#" data-page="${e.number+1}">&raquo;</a></li>`,i.querySelectorAll("a.page-link").forEach((t=>{t.addEventListener("click",(function(t){t.preventDefault()
const n=parseInt(this.getAttribute("data-page"))
!isNaN(n)&&n>=0&&n<e.totalPages&&o(n)}))}))}document.getElementById("historyPageSize").onchange=function(){t=parseInt(this.value),o(0)},document.getElementById("historyExamIdInput").oninput=function(){n=this.value,o(0)},a.querySelectorAll(".delete-history-btn").forEach((t=>{t.onclick=function(){if(confirm("Удалить эту историю?")){const n=getCookie("X-XSRF-TOKEN")
fetch(`/admin/api/user-score-history/${t.getAttribute("data-history-id")}`,{method:"DELETE",headers:{"X-XSRF-TOKEN":n}}).then((()=>o(e.number)))}}}))}(e)}))})(0),o.show()}function getCookie(e){const t=`; ${document.cookie}`.split(`; ${e}=`)
return 2===t.length?t.pop().split(";").shift():null}function showNotification(e,t){const n=document.getElementById("alertContainer")||createAlertContainer(),o=document.createElement("div")
o.className=`alert alert-${"success"===e?"success":"danger"} alert-dismissible fade show`,o.role="alert",o.innerHTML=`\n        ${t}\n        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Закрыть"></button>\n    `,n.appendChild(o),setTimeout((()=>{o.parentNode&&new bootstrap.Alert(o).close()}),5e3)}function createAlertContainer(){const e=document.createElement("div")
return e.id="alertContainer",e.className="position-fixed top-0 end-0 p-3",e.style.zIndex="1050",document.body.appendChild(e),e}let currentPage=0,pageSize=50,totalPages=1
document.addEventListener("DOMContentLoaded",(function(){loadUsers(),document.getElementById("searchButton").onclick=()=>loadUsers(0),document.getElementById("resetFilters").onclick=()=>{document.getElementById("filterId").value="",document.getElementById("filterEmail").value="",document.getElementById("filterUsername").value="",document.getElementById("filterRole").value="",document.getElementById("filterLocked").value="",loadUsers(0)},document.getElementById("pageSize").onchange=()=>loadUsers(0),document.getElementById("usersTableBody").addEventListener("click",(function(e){e.target.classList.contains("user-history-btn")&&openUserScoreHistoryModal(e.target.getAttribute("data-user-id")),e.target.classList.contains("edit-user-btn")&&openEditUserModal(e.target.getAttribute("data-user-id"))})),document.getElementById("createUserBtn").onclick=()=>{document.getElementById("createUserForm").reset(),new bootstrap.Modal(document.getElementById("createUserModal")).show()},document.getElementById("createUserForm").onsubmit=function(e){e.preventDefault()
const t=getCookie("X-XSRF-TOKEN"),n={email:document.getElementById("createUserEmail").value,username:document.getElementById("createUserUsername").value,role:document.getElementById("createUserRole").value,password:document.getElementById("createUserPassword").value}
fetch("/admin/api/users",{method:"POST",headers:{"Content-Type":"application/json","X-XSRF-TOKEN":t},body:JSON.stringify(n)}).then((e=>{if(!e.ok)throw new Error("Ошибка при создании пользователя. Возможно, пользователь с таким именем или email уже существует.")
return e.json()})).then((e=>{bootstrap.Modal.getInstance(document.getElementById("createUserModal")).hide(),loadUsers(0),showNotification("success","Пользователь успешно создан")})).catch((e=>{showNotification("error",e.message)}))},document.getElementById("editUserForm").onsubmit=function(e){e.preventDefault()
const t=getCookie("X-XSRF-TOKEN"),n=document.getElementById("editUserId").value,o={email:document.getElementById("editUserEmail").value,username:document.getElementById("editUserUsername").value,role:document.getElementById("editUserRole").value,accountNonLocked:!document.getElementById("editUserLocked").checked}
fetch(`/admin/api/users/${n}`,{method:"PUT",headers:{"Content-Type":"application/json","X-XSRF-TOKEN":t},body:JSON.stringify(o)}).then((e=>e.json())).then((()=>{bootstrap.Modal.getInstance(document.getElementById("editUserModal")).hide(),loadUsers(currentPage)}))},document.querySelectorAll(".modal").forEach((e=>{e.addEventListener("show.bs.modal",(function(){e.removeAttribute("inert")})),e.addEventListener("hidden.bs.modal",(function(){(e===document.activeElement||e.contains(document.activeElement))&&document.body.focus(),e.setAttribute("inert","")}))}))}))
